
> # In essence, hypertuning is done through flags. Anywhere in your neural network, 
> # you can replace a parameter with a flag
> FLAGS <- flags(
+   .... [TRUNCATED] 

> #
> 
> # build the neural network
> four.layer.model <- function() {
+   model <- keras_model_sequential() 
+   model %>%
+     layer_dense(units =  .... [TRUNCATED] 

> layer4_model <- four.layer.model()

> layer4_model %>% summary()
Model: "sequential"
____________________________________________________________________________________________________
 Layer (type)                                Output Shape                            Param #        
====================================================================================================
 dense_4 (Dense)                             (None, 256)                             26368          
 dropout_3 (Dropout)                         (None, 256)                             0              
 dense_3 (Dense)                             (None, 128)                             32896          
 dropout_2 (Dropout)                         (None, 128)                             0              
 dense_2 (Dense)                             (None, 8)                               1032           
 dropout_1 (Dropout)                         (None, 8)                               0              
 dense_1 (Dense)                             (None, 16)                              144            
 dropout (Dropout)                           (None, 16)                              0              
 dense (Dense)                               (None, 1)                               17             
====================================================================================================
Total params: 60,457
Trainable params: 60,457
Non-trainable params: 0
____________________________________________________________________________________________________

> # define early stop monitor
> early_stop <- callback_early_stopping(monitor = "val_loss", patience = 20)

> # define the number of epochs
> epochs <- 150

> # Fit the model and store training stats
> history <- layer4_model %>%
+   fit(x_train, y_train, epochs = epochs, batch_size = 128,
+       validati .... [TRUNCATED] 
